# ---- History ----
HISTFILE=~/.zsh_history # Location of the history file
HISTSIZE=10000 # Maximum number of entries in the history file
SAVEHIST=10000 # Maximum number of lines in memory before writing to the file
# History options
setopt APPEND_HISTORY    # Append history instead of overwriting
setopt SHARE_HISTORY     # Share history across multiple terminals
setopt HIST_IGNORE_DUPS  # Ignore duplicate commands
setopt HIST_IGNORE_SPACE # Ignore commands starting with a space
setopt HIST_VERIFY       # Let you edit history before executing

# ---- Keybindings ----
# Delete key fix
bindkey '\e[3~' delete-char
# ctrl + arrow keys for word-by-word navigation
bindkey '\e[1;5C' forward-word
bindkey '\e[1;5D' backward-word
# Shift + arrow keys for character selection
_shift_select_forward () {
    if ((REGION_ACTIVE)); then
        zle .forward-char
    else
        zle .set-mark-command && zle .forward-char
    fi
}
zle -N _shift_select_forward
_shift_select_backward () {
    if ((REGION_ACTIVE)); then
        zle .backward-char
    else
        zle .set-mark-command && zle .backward-char
    fi
}
zle -N _shift_select_backward
bindkey '\e[1;2C' _shift_select_forward
bindkey '\e[1;2D' _shift_select_backward
# ctrl + Shift + arrow keys for word selection
_shift_select_forward_word () {
    if ((REGION_ACTIVE)); then
        zle .forward-word
    else
        zle .set-mark-command && zle .forward-word
    fi
}
zle -N _shift_select_forward_word
_shift_select_backward_word () {
    if ((REGION_ACTIVE)); then
        zle .backward-word
    else
        zle .set-mark-command && zle .backward-word
    fi
}
zle -N _shift_select_backward_word
bindkey '\e[1;6C' _shift_select_forward_word
bindkey '\e[1;6D' _shift_select_backward_word

# ---- Paths ----
PATH=$PATH:/home/$USER/go/bin
PATH=$PATH:/home/$USER/.local/bin
# pnpm
export PNPM_HOME="$HOME/.local/share/pnpm"
case ":$PATH:" in
*":$PNPM_HOME:"*) ;;
*) export PATH="$PNPM_HOME:$PATH" ;;
esac
# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
# opencode
export PATH=/home/jfalava/.opencode/bin:$PATH

# ---- Aliases ----
alias update-all="sudo apt update && sudo apt upgrade && sudo apt autoremove && nix profile upgrade '.*' --exclude '.*nix.*' 2>/dev/null || echo 'No packages to upgrade' && nix-collect-garbage -d"
alias cls='clear'
alias ff='fastfetch'
alias tf='terraform'
alias l='eza --color=always --long --git --no-filesize --icons=always'
alias ls='eza --color=always --long --git --no-filesize --icons=always --all --color-scale-mode=gradient'
nix-install() {
  nix profile add "nixpkgs#$1"
}
nix-uninstall() {
  nix profile remove "nixpkgs#$1"
}
nix-search() {
  nix search nixpkgs "$1"
}

# ---- Sources ----
# zsh plugins
if [ -f $HOME/.nix-profile/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then
  source $HOME/.nix-profile/share/zsh-autosuggestions/zsh-autosuggestions.zsh
fi
if [ -f $HOME/.nix-profile/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
  source $HOME/.nix-profile/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi
# nix
source ~/.nix-profile/etc/profile.d/nix.sh
# zoxide
eval "$(zoxide init zsh)"
# SSH
if [ -z "$SSH_AUTH_SOCK" ] || [ ! -S "$SSH_AUTH_SOCK" ]; then
    eval "$(ssh-agent -s)"
fi
# starship
eval "$(starship init zsh)"
# initialize zsh completions
autoload -Uz compinit
compinit
